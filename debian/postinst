#!/bin/bash
# postinst script for astroberry-server-wui

# set password for VNC remote desktop
if [ "$1" = "configure" ] && [ ! -e /root/.vnc/config.d/vncserver-x11 ] && [ -z "$(grep '^Password=ce77cd632e94ca19845f7deae77a1828$' /root/.vnc/config.d/vncserver-x11)" ]; then
    echo "astroid" | vncpasswd -service
    echo "Authentication=VncAuth" >> /root/.vnc/config.d/vncserver-x11
fi
if [ "$1" = "configure" ] && [ ! -e /root/.vnc/config.d/vncserver-x11 ] && [ -z "$(grep 'Authentication=VncAuth' /root/.vnc/config.d/vncserver-x11)" ]; then
    echo "Authentication=VncAuth" >> /root/.vnc/config.d/vncserver-x11
fi

# set log directory access rights
if [ "$1" = "configure" ] && [ ! -d /var/log/astroid ] && [ -n "$(cut -d: -f1 /etc/passwd | grep '^astroid$')" ]; then
	mkdir /var/log/astroid
	chmod 750 /var/log/astroid
	chown astroid:adm /var/log/astroid
fi

# add required python packages
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep gps3)" ]; then
	pip3 install --no-warn-script-location gps3
fi
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep python-socketio)" ]; then
        pip3 install --no-warn-script-location python-socketio
fi
if [ "$1" = "configure" ] && [ -n "$(which pip3)" ] && [ -z "$(pip3 list | grep ephem)" ]; then
        pip3 install --no-warn-script-location ephem
fi

# create symbolic links
if [ "$1" = "configure" ] && [ ! -e /etc/nginx/sites-enabled/astroid ] && [ -e /etc/nginx/sites-available/astroid ]; then
	ln -sf /etc/nginx/sites-available/astroid /etc/nginx/sites-enabled/
fi
if [ "$1" = "configure" ] && [ ! -e /etc/nginx/sites-enabled/astroid ] && [ -e /etc/nginx/sites-available/astroid_ssl ]; then
	ln -sf /etc/nginx/sites-available/astroid /etc/nginx/sites-enabled/
fi

# remove default site for nginx
if [ "$1" = "configure" ] && [ -e /etc/nginx/sites-enabled/default ]; then
	rm -rf /etc/nginx/sites-enabled/default
fi

# link astroid version file
if [ "$1" = "configure" ] && [ ! -e /var/www/html/version.html ] && [ -e /etc/astroid.version ]; then
	ln -sf /etc/astroid.version /var/www/html/version.html
fi

if [ "$1" = "configure" ]; then

	# Refresh services files
	systemctl daemon-reload

	# Activate basic services
	systemctl enable vncserver-x11-serviced.service
	systemctl enable gpspanel.service
	systemctl enable astropanel.service
	systemctl enable indiwebmanager.service
	systemctl enable novnc.service
	systemctl enable nginx.service

	# Reload astroid services
	systemctl restart vncserver-x11-serviced.service
	systemctl restart gpspanel.service
	systemctl restart astropanel.service
	systemctl restart indiwebmanager.service
	systemctl restart novnc.service
	systemctl restart nginx.service

fi
